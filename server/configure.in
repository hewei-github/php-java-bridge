AC_INIT(
[PHP/Java Bridge], 
m4_bpatsubst(m4_include([../VERSION]),[
]), 
[php-java-bridge-users@lists.sourceforge.net], 
[php-java-bridge])
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_LINKS(protocol.h:../protocol.h)

dnl autoconf >2.53
AC_PREREQ(2.53)
AC_CONFIG_SRCDIR(natcJavaBridge.c)

dnl automake >1.6.3
AM_INIT_AUTOMAKE([1.6.3])
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_PROG_CPP
AM_PROG_GCJ
AC_PROG_LIBTOOL
AC_STDC_HEADERS

AC_ARG_WITH(java,  [  --with-java[[=JAVA_HOME[[,JRE_HOME]]]]	
                          include java support. If JRE_HOME is specified, 
                          the run-time java location will be compiled into 
                          the binary. Otherwise the java executable will 
                          be searched using the PATH environment variable
			  Example: --with-java=/opt/jdk1.4,/usr/java/jre1.6], PHP_JAVA="$withval", PHP_JAVA="yes")
AC_ARG_WITH(mono,  [  --with-mono[[=/path/to/mono/exe,[/path/to/dir-containing-ikvmc.exe+dlls]]] 
                          include mono support
                          Example: --with-mono=/opt/mono/bin/mono], PHP_MONO="$withval", PHP_MONO="no")
AC_ARG_WITH(extdir,  [  --with-extdir[[=DIR]]	
                          directory which contains the shared java 
                          extension], EXTENSION_DIR="$withval", EXTENSION_DIR="`php-config --extension-dir`")
AC_ARG_ENABLE(servlet,  [  --enable-servlet[[=JAR]]	
                          include java servlet support. JAR must be the 
                          location of j2ee.jar or servlet.jar; creates 
                          JavaBridge.war], SERVLET="$enableval", SERVLET="yes")
AC_ARG_ENABLE(script,  [  --enable-script[[=JAR]]	
                          include java script support. If you use a 
                          JDK < 1.6 JAR must be the location of 
                          script-api.jar; creates php-script.jar], SCRIPT="$enableval", SCRIPT="yes")

if test "$PHP_JAVA" != "no" || test "$PHP_MONO" != "no"  ; then

JAVA_FUNCTION_CHECKS
PTHREADS_CHECK
PTHREADS_ASSIGN_VARS
PTHREADS_FLAGS
JAVA_CHECK_BROKEN_STDIO_BUFFERING
JAVA_CHECK_ABSTRACT_NAMESPACE
JAVA_CHECK_STRUCT_UCRED

AC_MSG_CHECKING(libtool)
# On the Mac libtool is called "glibtool"
glibtool --version 2>/dev/null | fgrep "(GNU libtool)" ||
  libtool --version | fgrep "(GNU libtool)" ||
  AC_MSG_ERROR([Need GNU libtool, please read the INSTALL document.])

JNI_LIBS="libnatcJavaBridge.la"
AM_CPPFLAGS="${AM_CPPFLAGS} -DEXTENSION_DIR=\"\\\"\$(EXTENSION_DIR)\\\"\""
if test "$PHP_JAVA" != "yes"; then
# --with-java=/opt/compiletime/jdk,/usr/runtime/jre
PHP_JRE="`echo $PHP_JAVA | LANG=C awk -F, '{print $2}'`"
PHP_JAVA_DIR="`echo $PHP_JAVA | LANG=C awk -F, '{print $1}'`"

JAVA_INCLUDES=`for i in \`find $PHP_JAVA_DIR/include -follow -type d -print\`; do echo -n "-I$i "; done`
AM_CPPFLAGS="${AM_CPPFLAGS} $JAVA_INCLUDES"
AC_CHECK_PROG(have_ar, ar, "yes", "no")
JAVA_CHECK_JNI
if test "$jb_cv_have_jni" = "no"; then 
   JNI_LIBS=""
fi
else
AC_CHECK_PROG(have_ar, ar, "yes", "no")
JAVA_CHECK_JNI
if test "$jb_cv_have_jni" = "no"; then 
   echo "FATAL: Native compilation not supported on this system."
   echo "Install a java SDK and run: ./configure --with-java=<JAVA_HOME>"
   exit 3
fi
fi

AC_CHECK_PROG(have_gcj, gcj, "yes", "no")

JAVA_BRIDGE_JAR=
MONO_BRIDGE_EXE=
TCP_SOCKETNAME="9267"
EXTENSION_DISPLAY_NAME="VMBridge"
VM_BINARIES=

if test "$PHP_JAVA" != "no"; then
  if test X$PHP_JRE != X || test $jb_cv_have_jni = no || test $have_gcj = no; then
   VM_BINARIES="RunJavaBridge"
  else
   VM_BINARIES="java RunJavaBridge"
  fi
fi
if test "$PHP_JAVA" != "yes" && test "$PHP_JAVA" != "no"; then
  JAVA_BRIDGE_JAR="JavaBridge.jar"
else
  SCRIPT="no"
  SERVLET="no"
fi

if test "$PHP_MONO" != "no"; then

   MONO_BRIDGE_EXE="MonoBridge.exe ICSharpCode.SharpZipLib.dll IKVM.AWT.WinForms.dll IKVM.GNU.Classpath.dll IKVM.Runtime.dll"
   VM_BINARIES="${VM_BINARIES} ${MONO_BRIDGE_EXE} RunMonoBridge"
   
   # --with-mono=/path/to/mono.exe,/path/to/ikvmc/dir
   PHP_MONO_BINARY="`echo $PHP_MONO | LANG=C awk -F, '{print $1}'`"
   PHP_MONO="`echo $PHP_MONO | LANG=C awk -F, '{print $2}'`"
   if test "X$PHP_MONO_BINARY" = "X" || test "$PHP_MONO_BINARY" = "yes"; then 
     PHP_MONO_BINARY="mono"; 
   fi
   if test "X${PHP_MONO}" = "X"; then PHP_MONO="../unsupported"; fi
   if ! test -f ${PHP_MONO}/ikvmc.exe; then 
     AC_MSG_ERROR([ikvmc.exe not found])
   fi
fi

# optional script, requires servlet
JAVA_BRIDGE_SCRIPT_JAR="php-script.jar"
if test "$SCRIPT" = "no"; then
  JAVA_BRIDGE_SCRIPT_JAR=""
  SCRIPT=""
else
  if test "$SERVLET" = "no"; then
  SERVLET="yes";
  fi
fi
if test "$SCRIPT" = "yes"; then
  SCRIPT="script-api.jar"
fi

# optional JavaBridge.war, requires servlet
JAVA_BRIDGE_SERVLET_JAR="php-servlet.jar"
JAVA_BRIDGE_WAR="JavaBridge.war"
if test "$SERVLET" = "no"; then
  JAVA_BRIDGE_WAR=
  JAVA_BRIDGE_SERVLET_JAR=""
fi

if test "$SERVLET" = "yes"; then
  SERVLET="../unsupported/servlet-api.jar"
  if test X$SERVLET = X; then 
   echo "servlet-api.jar not found, skipping servlet JavaBridge.war creation" >2
   SERVLET=
   JAVA_BRIDGE_WAR=
  fi
fi

SOURCE_VERSION="-source 1.4 -target 1.4"
if test "X${PHP_JRE}" != "X"; then SOURCE_VERSION=; fi

BACKEND_VERSION=`cat ../VERSION`
AC_CONFIG_FILES([RunJavaBridge.c RunMonoBridge.c php/java/bridge/global.properties])
AC_SUBST(SOURCE_VERSION)
AC_SUBST(AM_CPPFLAGS)
AC_SUBST(BACKEND_VERSION)
AC_SUBST(EXTENSION_DIR)
AC_SUBST(PHP_JAVA_DIR)
AC_SUBST(PHP_MONO_BINARY)
AC_SUBST(PHP_MONO)
AC_SUBST(TCP_SOCKETNAME)
AC_SUBST(EXTENSION_DISPLAY_NAME)
AC_SUBST(VM_BINARIES)
AC_SUBST(MONO_BRIDGE_EXE)
AC_SUBST(SERVLET)
AC_SUBST(JAVA_BRIDGE_WAR)
AC_SUBST(JAVA_BRIDGE_JAR)
AC_SUBST(JAVA_BRIDGE_SERVLET_JAR)

# jni
AC_SUBST(JNI_LIBS)

# optional script
AC_SUBST(SCRIPT)
AC_SUBST(JAVA_BRIDGE_SCRIPT_JAR)
AC_OUTPUT(Makefile)

dnl echo "-----------------------------------------------------------------"
dnl echo "The PHP/Java Bridge back-end will be compiled with:"
dnl if test "$PHP_MONO" != "no"; then
dnl echo "  MONO DIR: $PHP_MONO"
dnl echo "  Will use GNU gcc, gcj and ikvmc to compile back-end to CLR bytecode."
dnl else if test "$PHP_JAVA" = "yes"; then
dnl echo "  JAVA: --with-java not specified."
dnl echo "  Will use GNU gcc, gcj to compile back-end to native code."
dnl else
dnl echo "  JAVA (compile time)    : $PHP_JAVA_DIR"
dnl echo "  JAVA (run time)        : $PHP_JRE"
dnl jni_available="available"
dnl if test "$jb_cv_have_jni" = "no"; then 
dnl   jni_available="not available"
dnl fi
dnl echo "  LOCAL (secure) channel : $jni_available"
dnl echo ""
dnl echo "  The following additional jars will be created:"
dnl echo "  SERVLET                : $JAVA_BRIDGE_SERVLET_JAR"
dnl echo "  SCRIPT                 : $JAVA_BRIDGE_SCRIPT_JAR"
dnl fi
dnl fi
dnl echo "-----------------------------------------------------------------"
dnl echo ""

else

echo "install:" >Makefile

fi
